!function(I){var g={};function C(A){if(g[A])return g[A].exports;var e=g[A]={i:A,l:!1,exports:{}};return I[A].call(e.exports,e,e.exports,C),e.l=!0,e.exports}C.m=I,C.c=g,C.d=function(I,g,A){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:A})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var e in I)C.d(A,e,function(g){return I[g]}.bind(null,e));return A},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=2)}([function(module,exports){eval("/**\n * 数据类型类\n */\nclass DataType {}\n\nDataType.isObject = obj => Object.prototype.toString.call(obj) === '[object Object]'\nDataType.isNumber = obj => Object.prototype.toString.call(obj) === '[object Number]'\nDataType.isString = obj => Object.prototype.toString.call(obj) === '[object String]'\nDataType.isUndefined = obj => Object.prototype.toString.call(obj) === '[object Undefined]'\nDataType.isBoolean = obj => Object.prototype.toString.call(obj) === '[object Boolean]'\nDataType.isArray = obj => Object.prototype.toString.call(obj) === '[object Array]'\nDataType.isFunction = obj => Object.prototype.toString.call(obj) === '[object Function]'\nDataType.isNull = obj => Object.prototype.toString.call(obj) === '[object Null]'\n\nDataType.isPrimitive = obj => !(DataType.isObject(obj) || DataType.isArray(obj))\n\n\n/**\n * 获取最终的数据类型\n * @param {*} obj\n */\nDataType.getType = obj => {\n    let type = Object.prototype.toString.call(obj)\n    return type.substring(8, type.length - 1)\n}\n\nDataType.ARRAY = 'ARRAY'\nDataType.OBJECT = 'OBJECT'\nDataType.STRING = 'STRING'\nDataType.NUMBER = 'NUMBER'\nDataType.BOOLEAN = 'BOOLEAN'\nDataType.FUNCTION = 'FUNCTION'\nDataType.NULL = 'NULL'\nDataType.UNDEFINED = 'UNDEFINED'\n\nmodule.exports = DataType\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRGF0YVR5cGUuanM/OWJjOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIOaVsOaNruexu+Wei+exu1xuICovXG5jbGFzcyBEYXRhVHlwZSB7fVxuXG5EYXRhVHlwZS5pc09iamVjdCA9IG9iaiA9PiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgT2JqZWN0XSdcbkRhdGFUeXBlLmlzTnVtYmVyID0gb2JqID0+IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBOdW1iZXJdJ1xuRGF0YVR5cGUuaXNTdHJpbmcgPSBvYmogPT4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IFN0cmluZ10nXG5EYXRhVHlwZS5pc1VuZGVmaW5lZCA9IG9iaiA9PiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgVW5kZWZpbmVkXSdcbkRhdGFUeXBlLmlzQm9vbGVhbiA9IG9iaiA9PiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgQm9vbGVhbl0nXG5EYXRhVHlwZS5pc0FycmF5ID0gb2JqID0+IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBBcnJheV0nXG5EYXRhVHlwZS5pc0Z1bmN0aW9uID0gb2JqID0+IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBGdW5jdGlvbl0nXG5EYXRhVHlwZS5pc051bGwgPSBvYmogPT4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IE51bGxdJ1xuXG5EYXRhVHlwZS5pc1ByaW1pdGl2ZSA9IG9iaiA9PiAhKERhdGFUeXBlLmlzT2JqZWN0KG9iaikgfHwgRGF0YVR5cGUuaXNBcnJheShvYmopKVxuXG5cbi8qKlxuICog6I635Y+W5pyA57uI55qE5pWw5o2u57G75Z6LXG4gKiBAcGFyYW0geyp9IG9ialxuICovXG5EYXRhVHlwZS5nZXRUeXBlID0gb2JqID0+IHtcbiAgICBsZXQgdHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopXG4gICAgcmV0dXJuIHR5cGUuc3Vic3RyaW5nKDgsIHR5cGUubGVuZ3RoIC0gMSlcbn1cblxuRGF0YVR5cGUuQVJSQVkgPSAnQVJSQVknXG5EYXRhVHlwZS5PQkpFQ1QgPSAnT0JKRUNUJ1xuRGF0YVR5cGUuU1RSSU5HID0gJ1NUUklORydcbkRhdGFUeXBlLk5VTUJFUiA9ICdOVU1CRVInXG5EYXRhVHlwZS5CT09MRUFOID0gJ0JPT0xFQU4nXG5EYXRhVHlwZS5GVU5DVElPTiA9ICdGVU5DVElPTidcbkRhdGFUeXBlLk5VTEwgPSAnTlVMTCdcbkRhdGFUeXBlLlVOREVGSU5FRCA9ICdVTkRFRklORUQnXG5cbm1vZHVsZS5leHBvcnRzID0gRGF0YVR5cGVcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){eval("const { isArray, isObject, isPrimitive } = __webpack_require__(0)\n\n/**\n * 工具类\n */\nclass Utils {}\n\nUtils.getObjectValue = (data, property) => {\n    if (!isObject(data)) {\n        throw new Error('data need object')\n    }\n    let value = Utils.deepClone(data)\n    if (isArray(property)) {\n        property.length > 0 && property.forEach(key => {\n            value = value[key]\n        })\n        return value\n    } else {\n        return value[property]\n    }\n}\n\nUtils.deepClone = function(obj = {}) {\n    // 值类型的情况下直接返回\n    // obj 是 null，或者不是对象也不是数组，就直接返回\n    if (typeof obj !== 'object' || obj == null) {\n        return obj\n    }\n    // 初始化返回结果,是数组就定义为数组，是对象就定义为对象\n    let result\n    if (obj instanceof Array) {\n        result = []\n    } else {\n        result = {}\n    }\n    \n    for (const key in obj) {\n        // 判断 key 是否是自身的属性\n        // eslint-disable-next-line no-prototype-builtins\n        if (obj.hasOwnProperty(key)) {\n            // 保证不是原型上的属性\n            result[key] = this.deepClone(obj[key])\n        }\n    }\n    return result\n}\n\nUtils.contentEqual = (source, target) => {\n    // 若 target 是原始数据类型和函数，则 直接比较\n    if (isPrimitive(source) || isPrimitive(target)) {\n        return source === target\n    }\n    // 若都是对象\n    if (isObject(source) && isObject(target)) {\n        const sourceLength = Object.keys(source).length\n        const targetLength = Object.keys(target).length\n        \n        // 若对象长度不等则肯定不等\n        if (sourceLength !== targetLength) {\n            return false\n        }\n        \n        for (let key in source) {\n            if (source.hasOwnProperty(key)) {\n                const isEqual = Utils.contentEqual(source[key], target[key])\n                if (!isEqual) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n    // 若都是数组\n    if (isArray(source) && isArray(target)) {\n        const sourceLength = source.length\n        const targetLength = target.length\n        \n        // 若数组长度不等则肯定不等\n        if (sourceLength !== targetLength) {\n            return false\n        }\n        for (let i = 0; i < sourceLength; i++) {\n            const isEqual = Utils.contentEqual(source[i], target[i])\n            if (!isEqual) {\n                return false\n            }\n        }\n        return true\n    }\n    // 啥也不是\n    return false\n}\n\nmodule.exports = Utils\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvVXRpbHMuanM/OWM4ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLGlDQUFpQyxHQUFHLG1CQUFPLENBQUMsQ0FBWTs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGtCQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBpc0FycmF5LCBpc09iamVjdCwgaXNQcmltaXRpdmUgfSA9IHJlcXVpcmUoJy4vRGF0YVR5cGUnKVxuXG4vKipcbiAqIOW3peWFt+exu1xuICovXG5jbGFzcyBVdGlscyB7fVxuXG5VdGlscy5nZXRPYmplY3RWYWx1ZSA9IChkYXRhLCBwcm9wZXJ0eSkgPT4ge1xuICAgIGlmICghaXNPYmplY3QoZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdkYXRhIG5lZWQgb2JqZWN0JylcbiAgICB9XG4gICAgbGV0IHZhbHVlID0gVXRpbHMuZGVlcENsb25lKGRhdGEpXG4gICAgaWYgKGlzQXJyYXkocHJvcGVydHkpKSB7XG4gICAgICAgIHByb3BlcnR5Lmxlbmd0aCA+IDAgJiYgcHJvcGVydHkuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZVtrZXldXG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiB2YWx1ZVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB2YWx1ZVtwcm9wZXJ0eV1cbiAgICB9XG59XG5cblV0aWxzLmRlZXBDbG9uZSA9IGZ1bmN0aW9uKG9iaiA9IHt9KSB7XG4gICAgLy8g5YC857G75Z6L55qE5oOF5Ya15LiL55u05o6l6L+U5ZueXG4gICAgLy8gb2JqIOaYryBudWxs77yM5oiW6ICF5LiN5piv5a+56LGh5Lmf5LiN5piv5pWw57uE77yM5bCx55u05o6l6L+U5ZueXG4gICAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBvYmpcbiAgICB9XG4gICAgLy8g5Yid5aeL5YyW6L+U5Zue57uT5p6cLOaYr+aVsOe7hOWwseWumuS5ieS4uuaVsOe7hO+8jOaYr+WvueixoeWwseWumuS5ieS4uuWvueixoVxuICAgIGxldCByZXN1bHRcbiAgICBpZiAob2JqIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgcmVzdWx0ID0gW11cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSB7fVxuICAgIH1cbiAgICBcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICAgICAgLy8g5Yik5patIGtleSDmmK/lkKbmmK/oh6rouqvnmoTlsZ7mgKdcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xuICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgIC8vIOS/neivgeS4jeaYr+WOn+Wei+S4iueahOWxnuaAp1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB0aGlzLmRlZXBDbG9uZShvYmpba2V5XSlcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0XG59XG5cblV0aWxzLmNvbnRlbnRFcXVhbCA9IChzb3VyY2UsIHRhcmdldCkgPT4ge1xuICAgIC8vIOiLpSB0YXJnZXQg5piv5Y6f5aeL5pWw5o2u57G75Z6L5ZKM5Ye95pWw77yM5YiZIOebtOaOpeavlOi+g1xuICAgIGlmIChpc1ByaW1pdGl2ZShzb3VyY2UpIHx8IGlzUHJpbWl0aXZlKHRhcmdldCkpIHtcbiAgICAgICAgcmV0dXJuIHNvdXJjZSA9PT0gdGFyZ2V0XG4gICAgfVxuICAgIC8vIOiLpemDveaYr+WvueixoVxuICAgIGlmIChpc09iamVjdChzb3VyY2UpICYmIGlzT2JqZWN0KHRhcmdldCkpIHtcbiAgICAgICAgY29uc3Qgc291cmNlTGVuZ3RoID0gT2JqZWN0LmtleXMoc291cmNlKS5sZW5ndGhcbiAgICAgICAgY29uc3QgdGFyZ2V0TGVuZ3RoID0gT2JqZWN0LmtleXModGFyZ2V0KS5sZW5ndGhcbiAgICAgICAgXG4gICAgICAgIC8vIOiLpeWvueixoemVv+W6puS4jeetieWImeiCr+WumuS4jeetiVxuICAgICAgICBpZiAoc291cmNlTGVuZ3RoICE9PSB0YXJnZXRMZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICBpZiAoc291cmNlLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpc0VxdWFsID0gVXRpbHMuY29udGVudEVxdWFsKHNvdXJjZVtrZXldLCB0YXJnZXRba2V5XSlcbiAgICAgICAgICAgICAgICBpZiAoIWlzRXF1YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICAgIC8vIOiLpemDveaYr+aVsOe7hFxuICAgIGlmIChpc0FycmF5KHNvdXJjZSkgJiYgaXNBcnJheSh0YXJnZXQpKSB7XG4gICAgICAgIGNvbnN0IHNvdXJjZUxlbmd0aCA9IHNvdXJjZS5sZW5ndGhcbiAgICAgICAgY29uc3QgdGFyZ2V0TGVuZ3RoID0gdGFyZ2V0Lmxlbmd0aFxuICAgICAgICBcbiAgICAgICAgLy8g6Iul5pWw57uE6ZW/5bqm5LiN562J5YiZ6IKv5a6a5LiN562JXG4gICAgICAgIGlmIChzb3VyY2VMZW5ndGggIT09IHRhcmdldExlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzb3VyY2VMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgaXNFcXVhbCA9IFV0aWxzLmNvbnRlbnRFcXVhbChzb3VyY2VbaV0sIHRhcmdldFtpXSlcbiAgICAgICAgICAgIGlmICghaXNFcXVhbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICAgIC8vIOWVpeS5n+S4jeaYr1xuICAgIHJldHVybiBmYWxzZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFV0aWxzXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){eval("const { isArray, isObject, isFunction, isUndefined, isString } = __webpack_require__(0)\nconst DataType = __webpack_require__(0)\nconst Utils = __webpack_require__(1)\nconst Filters = __webpack_require__(3)\nconst Dep = __webpack_require__(4)\n\nclass Model {\n    \n    /**\n     * @param modelDescription 模型描述对象\n     */\n    constructor (modelDescription) {\n        this.modelDescription = modelDescription\n        this.result = null\n        this.resultType = null\n        this.resultCache = null\n        this.cache = null\n        this.dep = new Dep(this)\n    }\n    \n    /**\n     * 初始化结果集，对象还是数组\n     * @param data\n     * @returns {{}}\n     * @private\n     */\n    _initResult (data) {\n        let result = null\n        if (isArray(data)) {\n            result = []\n        } else if (isObject(data)) {\n            result = {}\n        } else {\n            throw new Error('The model.generate() requires an array or object type argument.')\n        }\n        return result\n    }\n    \n    /**\n     * 初始化结果集类型\n     * @param data\n     * @returns {string}\n     * @private\n     */\n    _initResultType (data) {\n        let resultType = null\n        if (isArray(data)) {\n            resultType = DataType.ARRAY\n        } else if (isObject(data)) {\n            resultType = DataType.OBJECT\n        } else {\n            throw new Error('The model.generate() requires an array or object type argument.')\n        }\n        return resultType\n    }\n    \n    /**\n     * 判断数据源 data 的 key 对应的 value 值 和模型描述对象中描述的数据类型是否一样\n     * 数据类型不一样，直接抛出异常\n     * @param value 最终值\n     * @param dataType 数据类型\n     * @param errorMessage 错误信息\n     * @private\n     */\n    _checkType (value, dataType, errorMessage) {\n        if (DataType.getType(value) !== DataType.getType(dataType(value))) {\n            throw new Error(errorMessage)\n        }\n    }\n    \n    /**\n     * 获取默认值，有默认值\n     * @param key 数据模型对象中声明的键名\n     * @param value 数据模型对象中property 在 data 中的 value 值\n     * @param modelDescriptionValue 数据模型对象中声明的默认值\n     * @returns {*}\n     * @private\n     */\n    _getDefaultValue (value, modelDescriptionValue, key) {\n        const defaultValue = modelDescriptionValue.default\n        const dataType = modelDescriptionValue.type\n        if (isUndefined(value)) {\n            if (isUndefined(defaultValue)) {\n                throw new Error(key + ' need default value.')\n            } else {\n                const errorMessage = key + '\\'s default value need type ' + DataType.getType(new dataType(defaultValue)) + ', instead of ' + DataType.getType(defaultValue)\n                this._checkType(defaultValue, dataType, errorMessage)\n                return defaultValue\n            }\n        } else {\n            return value\n        }\n    }\n    \n    /**\n     * 获取使用过滤器后的数据\n     * @param value\n     * @param modelDescriptionValue\n     * @returns {*}\n     * @private\n     */\n    _getFilterValue (value, modelDescriptionValue) {\n        // 如果存在过滤器\n        const filter = modelDescriptionValue.filter\n        // 过滤器是函数\n        if (isFunction(filter)) {\n            return filter(value)\n        } else if (isString(filter)) {\n            // 过滤器是字符串\n            const buildInFilter = Filters[filter]\n            if (isFunction(buildInFilter)) {\n                return buildInFilter(value)\n            } else {\n                throw new Error(filter + ' is not a build in filter.')\n            }\n        } else {\n            return value\n        }\n    }\n    \n    /**\n     *\n     * @param data\n     * @param property\n     * @param fn\n     * @returns {{}}\n     * @private\n     */\n    _buildOnArray1(data, property, fn) {\n        const result = []\n        const temp = Utils.deepClone(data)\n        temp[property].forEach(item => {\n            result.push(fn(item))\n        })\n        temp[property] = result\n        return temp\n    }\n    \n    /**\n     * 生成结果\n     * @param data\n     * @param key\n     * @param modelDescriptionValue\n     * @returns {*}\n     * @private\n     */\n    _generateResultFromObject (data, key, modelDescriptionValue) {\n        const { type, property } = modelDescriptionValue\n        // property === 'ADDRESS_INFO' && console.log(type, property)\n        // 若 modelDescriptionValue 不是对象，那么 property 和 数据源的 property 一样\n        // 获得数据源 data 的 key 对应的 value 值\n        let value = null\n        \n        if (isUndefined(property)) {\n            throw new Error(key + ' need property.')\n        }\n        \n        if (isUndefined(type)) {\n            throw new Error(property + ' need type property.')\n        }\n        \n        if (!(type === String || type === Number || type === Boolean || type === Object || type === Array)) {\n            throw new Error(property + ' need type property, only Number, String, Boolean, Object, Array.')\n        }\n        \n        if (type === Array) {\n            const tempData = Utils.deepClone(data)\n            tempData[property] = this._getDefaultValue(tempData[property], modelDescriptionValue, property)\n            const children = modelDescriptionValue.children\n            if (isObject(children)) {\n                if (children.type === Object) {\n                    const temp = Utils.deepClone(tempData)\n                    const children = modelDescriptionValue.children.children\n                    if (children) {\n                        let model = new Model(children)\n                        const result = []\n                        temp[property].forEach(item => {result.push(model.generate(item))})\n                        model = null\n                        temp[property] = result\n                    }\n                    data = temp\n                }\n                // else {\n                //     throw new Error('children need type property')\n                // }\n                \n                const filter = children.filter\n                if (isFunction(filter)) {\n                    const result = []\n                    const temp = Utils.deepClone(tempData)\n                    if (isUndefined(temp[property])) {\n                        throw new Error('DataSource need property ' + property)\n                    }\n                    temp[property].forEach(item => { result.push(filter(item)) })\n                    temp[property] = result\n                    data = temp\n                }\n            }\n        }\n        \n        if (type === Object) {\n            const children = modelDescriptionValue.children\n            const temp = Utils.deepClone(data)\n            if (children) {\n                let model = new Model(children)\n                temp[property] = model.generate(temp[property])\n                model = null\n            }\n            data = temp\n        }\n        \n        // property === 'ADDRESS.PROVINCE' && console.log(data, property)\n        value = Utils.getObjectValue(data, property)\n        // 设置默认值\n        value = this._getDefaultValue(value, modelDescriptionValue, key)\n        \n        // 设置使用过滤器后的值\n        value = this._getFilterValue(value, modelDescriptionValue)\n        \n        // 检查类型\n        this._checkType(value, type, key + ' need type ' + DataType.getType(new type(value)) + ', instead of ' + DataType.getType(value))\n        \n        // 否则 直接赋值给 result\n        return value\n    }\n    \n    /**\n     *\n     * @param data\n     * @param modelDescription\n     * @returns {{}}\n     * @private\n     */\n    _buildOnObject(data,modelDescription) {\n        let result = {}\n        // 遍历模型描述对象\n        for (let key in modelDescription) {\n            if (modelDescription.hasOwnProperty(key)) {\n                // 获得模型描述对象的 key 对应的 value 值 modelDescriptionValue\n                const modelDescriptionValue = modelDescription[key]\n                let _modelDescriptionValue = {}\n                // 若 modelDescriptionValue 是对象\n                if (isObject(modelDescriptionValue)) {\n                    _modelDescriptionValue = modelDescriptionValue\n                } else {\n                     _modelDescriptionValue = {\n                        type: modelDescriptionValue,\n                        property: key,\n                    }\n                }\n                result[key] = this._generateResultFromObject(data, key, _modelDescriptionValue)\n            }\n        }\n        return result\n    }\n    \n    /**\n     *\n     * @param data\n     * @param modelDescription\n     * @returns {[]}\n     * @private\n     */\n    _buildOnArray(data, modelDescription) {\n        const result = []\n        let model = new Model(modelDescription)\n        data.forEach(item => { result.push(model.generate(item)) })\n        model = null\n        return result\n    }\n    \n    /**\n     * 构建函数\n     * @param data\n     * @param modelDescription\n     * @param result\n     * @param resultType\n     * @private\n     */\n    _build (data, modelDescription, result, resultType) {\n        // 如果传入的 data 是对象\n        if (resultType === DataType.OBJECT) {\n            return this._buildOnObject(data, modelDescription)\n        }\n        // 如果传入的 data 是数组\n        if (resultType === DataType.ARRAY) {\n            return this._buildOnArray(data, modelDescription)\n        }\n    }\n    \n    /**\n     * 生成函数\n     * @param dataSource 数据源\n     * @returns {*}\n     */\n    generate (dataSource) {\n        // 增加缓存机制，提升性能\n        // 判断传入的数据源和缓存中的是否一样，一样则直接返回上次的数据\n        if (this.dep.isContentEqual(dataSource)){\n            return this.dep.getResult()\n        }\n        const data = Utils.deepClone(dataSource)\n        // 数据源缓存\n        this.cache = data\n        this.result = this._initResult(data)\n        this.resultType = this._initResultType(data)\n        const resultData = this._build(data, this.modelDescription, this.result, this.resultType)\n        // 缓存最终结果\n        this.resultCache = Utils.deepClone(resultData)\n        const depOptions = {\n            dataSource: data,\n            result: resultData\n        }\n        this.dep.add(this.dep.setId(), depOptions)\n        return resultData\n    }\n}\n\n\nmodule.exports = Model\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,exports){eval('/**\n * 过滤器类\n */\nclass Filters {}\n\nFilters.price = (price) => {\n    return "¥ " + Number(price) * 100\n}\n\nmodule.exports = Filters\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRmlsdGVycy5qcz81ODNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiDov4fmu6TlmajnsbtcbiAqL1xuY2xhc3MgRmlsdGVycyB7fVxuXG5GaWx0ZXJzLnByaWNlID0gKHByaWNlKSA9PiB7XG4gICAgcmV0dXJuIFwiwqUgXCIgKyBOdW1iZXIocHJpY2UpICogMTAwXG59XG5cbm1vZHVsZS5leHBvcnRzID0gRmlsdGVyc1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval("const Utils = __webpack_require__(1)\n\nclass Dep {\n    constructor () {\n        this.list = {}  // 缓存对象\n        this.result = null  // 当相等时，将结果保存在这里\n        this.isEqual = false    // 是否相等\n    }\n    \n    /**\n     * 先调\n     * 判断 Dep 对象中是否有余 dataSource 相等的对象\n     * @param dataSource 数据源对象\n     * @returns {boolean}\n     */\n    isContentEqual (dataSource) {\n        for (let depId in this.list) {\n            if (this.list.hasOwnProperty(depId)) {\n                const item = this.list[depId]\n                if (Utils.contentEqual(dataSource, item.dataSource)) {\n                    this.result = item.result\n                    this.isEqual = true\n                    return true\n                }\n            }\n        }\n    }\n    \n    /**\n     * 后调\n     * 添加 depId 和 options\n     * @param depId dep 标识id\n     * @param options 数据源和最终结果\n     */\n    add (depId, options) {\n        // 若相等则不添加\n        if (!this.isEqual) {\n            this.list[depId] = options\n        }\n    }\n    \n    /**\n     * 获取最终结果\n     * @returns {null}\n     */\n    getResult () {\n        return this.result\n    }\n    \n    /**\n     * 设置id\n     * @returns {number}\n     */\n    setId() {\n        return Dep.depId++\n    }\n    \n}\n\nDep.depId = 0\n\nmodule.exports = Dep\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRGVwLmpzPzQ4OGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLENBQVM7O0FBRS9CO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFV0aWxzID0gcmVxdWlyZSgnLi9VdGlscycpXG5cbmNsYXNzIERlcCB7XG4gICAgY29uc3RydWN0b3IgKCkge1xuICAgICAgICB0aGlzLmxpc3QgPSB7fSAgLy8g57yT5a2Y5a+56LGhXG4gICAgICAgIHRoaXMucmVzdWx0ID0gbnVsbCAgLy8g5b2T55u4562J5pe277yM5bCG57uT5p6c5L+d5a2Y5Zyo6L+Z6YeMXG4gICAgICAgIHRoaXMuaXNFcXVhbCA9IGZhbHNlICAgIC8vIOaYr+WQpuebuOetiVxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiDlhYjosINcbiAgICAgKiDliKTmlq0gRGVwIOWvueixoeS4reaYr+WQpuacieS9mSBkYXRhU291cmNlIOebuOetieeahOWvueixoVxuICAgICAqIEBwYXJhbSBkYXRhU291cmNlIOaVsOaNrua6kOWvueixoVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGlzQ29udGVudEVxdWFsIChkYXRhU291cmNlKSB7XG4gICAgICAgIGZvciAobGV0IGRlcElkIGluIHRoaXMubGlzdCkge1xuICAgICAgICAgICAgaWYgKHRoaXMubGlzdC5oYXNPd25Qcm9wZXJ0eShkZXBJZCkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5saXN0W2RlcElkXVxuICAgICAgICAgICAgICAgIGlmIChVdGlscy5jb250ZW50RXF1YWwoZGF0YVNvdXJjZSwgaXRlbS5kYXRhU291cmNlKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdCA9IGl0ZW0ucmVzdWx0XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNFcXVhbCA9IHRydWVcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLyoqXG4gICAgICog5ZCO6LCDXG4gICAgICog5re75YqgIGRlcElkIOWSjCBvcHRpb25zXG4gICAgICogQHBhcmFtIGRlcElkIGRlcCDmoIfor4ZpZFxuICAgICAqIEBwYXJhbSBvcHRpb25zIOaVsOaNrua6kOWSjOacgOe7iOe7k+aenFxuICAgICAqL1xuICAgIGFkZCAoZGVwSWQsIG9wdGlvbnMpIHtcbiAgICAgICAgLy8g6Iul55u4562J5YiZ5LiN5re75YqgXG4gICAgICAgIGlmICghdGhpcy5pc0VxdWFsKSB7XG4gICAgICAgICAgICB0aGlzLmxpc3RbZGVwSWRdID0gb3B0aW9uc1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8qKlxuICAgICAqIOiOt+WPluacgOe7iOe7k+aenFxuICAgICAqIEByZXR1cm5zIHtudWxsfVxuICAgICAqL1xuICAgIGdldFJlc3VsdCAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlc3VsdFxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiDorr7nva5pZFxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAgICovXG4gICAgc2V0SWQoKSB7XG4gICAgICAgIHJldHVybiBEZXAuZGVwSWQrK1xuICAgIH1cbiAgICBcbn1cblxuRGVwLmRlcElkID0gMFxuXG5tb2R1bGUuZXhwb3J0cyA9IERlcFxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n")}]);